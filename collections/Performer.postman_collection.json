{
	"info": {
		"_postman_id": "b3346fa2-ad90-4cac-86c0-1373a5289292",
		"name": "Performer",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27539264"
	},
	"item": [
		{
			"name": "Add a performer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"performer_id\", data.id)\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\":\"juan\",\r\n    \"imagen\":\"https://picsum.photos/200/300\",\r\n    \"descripcion\":\"juan juan\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/performer",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"performer"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add a performer with long desc",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"   pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"La descripciÃ³n no puede superar los 100 caracteres\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\":\"juan\",\r\n    \"imagen\":\"https://picsum.photos/200/300\",\r\n    \"descripcion\":\"Juan juan juanJuan juan juanJuan juan juanJuan juan juanJuan juan juanJuan juan juanJuan juan juanJuan juan juanJuan juan juanJuan juan juanJuan juan juanJuan juan juanJuan juan juanJuan juan juanJuan juan juanJuan juan juanJuan juan juan\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/performer",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"performer"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all performers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Number of performes > ' + 0, function () {\r",
							"   var data = pm.response.json()\r",
							"   pm.expect(data.length).to.greaterThan(0)\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/performer",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"performer"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a performer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/performer/{{performer_id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"performer",
						"{{performer_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get an invalid performer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El performer no existe\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/performer/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"performer",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": []
		}
	]
}